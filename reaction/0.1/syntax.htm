<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Reaction RuleML 0.1 Syntax</title><meta name="description" content="Reaction RuleML" /><meta name="keywords" content="Reaction Rules, Production Rules, ECA Rules, Active Rules, RuleML, ECA-RuleML, Event Logic, Event Algebra, Action Algebra, Event Condition Action ECA, Event Notification, Event Messaging, Forward-Reasoning, Backward-Reasoning, Prova, Rule Markup, RIF, Semantic Web, Rewerse" /><meta name="Generator" content="&copy; 2002-2006 RuleML" /><meta name="robots" content="index, follow" /><meta http-equiv="Content-Type" content="text/html;>charset=iso-8859-1" /><link href="../css/template_css.css" rel="stylesheet" type="text/css" /> </head><body bgcolor=#ffffff leftmargin="3" topmargin="3"><font color="#FFFFFF"></font> <table width="800" border="0" cellspacing="1" cellpadding="0" bordercolor="#FFFFFF">  <tr>     <td height="10"><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"></font><font color="#FFFFFF" size="2">       </font><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"></font></b></font><font color="#FFFFFF" size="2">       </font><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FF8000" size="5" face="Geneva, Arial, Helvetica, san-serif"><span class="pathway"><span class="pathway"><strong><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="15" height="5" align="absmiddle" /></span></font></b></font></b></font></strong></span></span></font></b></font></b></font><font color="#FFFFFF" size="2">       </font><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="181" height="8" align="absmiddle" /></span></font><font color="#FFFFFF" size="2">       </font></b></font></td>    <td width="289" height="10">&nbsp;</td>    <td width="93" height="10" valign="bottom"> <div align="right"></div></td>    <td colspan="2" valign="bottom"> <div align="right"><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><img src="../images/transparent.gif" width="10" height="10" /></b></font></b></font>       </div></td>  </tr>  <tr>     <td height="27" colspan="2" bgcolor="#666666"><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"><span class="pathway"><span class="pathway"><strong><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="15" height="5" align="absmiddle" /></span></font></b></font></b></font></strong></span></span></font></b></font></b></font><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;">Reaction Rules for the Rule Markup Language</span></font></td>    <td height="27" colspan="3" bgcolor="#666666"> <div align="right"><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><a href="http://reaction.ruleml.org/"><font color="#333333"><u>Reaction       RuleML Home</u></font></a><img src="../images/transparent.gif" width="10" height="10" align="absmiddle" />         </span></font></div></td>  </tr>  <tr>     <td colspan="4" background="../images/striche_rechts_nur_rechts_breit.gif">       <div align="left"><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"><span class="pathway"><span class="pathway"><strong><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="15" height="5" align="absmiddle" /></span></font></b></font></b></font></strong></span></span></font></b></font></b></font><font color="#FF8000" size="5" face="Geneva, Arial, Helvetica, san-serif">Reaction RuleML</font></b></font></div></td>	<td height="60"><div align="right"><a href="http://www.ruleml.org/" target="_blank"><img src="../images/RuleMLlogo2005.jpg" width="120" height="29" hspace="10" /></a></div></td>  </tr>    <tr>     <td height="13" bgcolor="#FF8000"><span class="pathway"><span class="pathway"><strong><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="15" height="5" align="absmiddle" /></span></font></b></font></b></font></strong></span></span><a href="http://reaction.ruleml.org/"><font color="#333333"><u>Reaction       RuleML Home</u></font></a></td>    <td height="13" colspan="4" bgcolor="#666666"><span class="pathway"><span class="pathway"><strong><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font size="6" face="Verdana, Arial, Helvetica, sans-serif" color="#F0DFB9"><b><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="10" height="5" align="absmiddle" /><img src="../images/transparent.gif" width="10" height="18" align="absmiddle" /></span></font></b></font></b></font></strong></span></span></td>  </tr>  <tr>     <td height="106" valign="top"> <table width="100%" border="0" cellspacing="12">        <tr>           <td colspan="2" valign="top" > <div align="justify">               <table border="0" align="left">                <tr>                   <td width="134" valign="top"><strong><font color="#FF8000">Content</font></strong></td>                </tr>                <tr>                   <td valign="top"><p align="left"> <a href="./index.htm#overview">Overview</a><br />				  				  <a href="./index.htm#scope">Scope</a><br>				                        <a href="./index.htm#layers">Modularization</a><br />                      <a href="./index.htm#examples">Examples</a><br />                      <a href="./index.htm#xsd">XSD Schema</a><br />                      <a href="">Syntax</a><br>                      <a href="./index.htm#glossary">Glossary</a><br />                      <a href="./index.htm#validation">Validation</a><br />					  <a href="./index.htm#translation">Translators</a><br />                      <a href="./index.htm#links">References</a></p>                    <p align="left">&nbsp;</p>                    </td>                </tr>                <tr>                   <td valign="top"><strong><font color="#FF8000">News</font><font color="#FFFFFF"></font></strong></td>                </tr>				<tr>                 <td valign="top">				  <p><a href="http://2007.ruleml.org" target="_blank">Int. RuleML Symposium on Rule Interchange                       and Applications</a> (<a href="http://2007.ruleml.org" target="_blank">RuleML-2007</a>),                       2007-10-25/26, co-located with the 10th International Business                       Rules Forum (<a href="http://2007.ruleml.org/cfp.pdf" target="_blank">CfP</a>)</p>                    <p><a href="../docs/Reaction-RuleM_tutorial06.pdf" target="_blank">Reaction                       RuleML Tutorial</a> at <a href="http://2006.ruleml.org/group3.html#tutorials" target="_blank">RuleML'06</a>,                       2006-11-12 (<a href="../docs/Reaction-RuleM_tutorial06.pdf" target="_blank">slides</a>)</p>                    <p>Special Event on Reaction RuleML at <a href="http://2006.ruleml.org/" target="_blank">RuleML'06</a>                       / <a href="" target="_blank">ISWC'06</a>, 2006-11-09 (<a href="../events/ReactionRuleMLEvent06.htm" target="_blank">info</a>)</p>				    <p>Reaction RuleML 0.1 Release, 2006-11-07 (<a href="./xsd.htm">xsd</a>)</p>                    <p> Technical Telephone Conference, 2006-10-19 <a href="../docs/Reaction-RuleML-Talk-2006-10-19.pdf" target="_blank">(slides)</a>                     </p>				  	<p>&nbsp; </p>                    <p><a href="../news.htm" >all news&gt;&gt;</a></p>                    <p>&nbsp;</p></td>                </tr>				<tr>                   <td valign="top"><strong><font color="#FF8000">Reaction RuleML                     List </font></strong></td>                </tr>                <tr>                   <td valign="top">				  	<p><a href="http://mail.ruleml.org/pipermail/reaction-tg/" target="_blank">Archives</a><br>                      <a href="http://mail.ruleml.org/mailman/listinfo/reaction-tg" target="_blank">Subscribe</a><br>                      <br>                      <em>post a message:</em><br>                      <a href="mailto:reaction-tg@ruleml.org">reaction-tg@ruleml.org</a></p>                    <p>&nbsp;</p></td>                </tr>                <tr>                   <td valign="top"><strong><font color="#FF8000">Publications</font><font color="#FFFFFF"></font></strong></td>                </tr>               <tr>                   <td valign="top"><p><a href="../docs/Reaction-RuleM_tutorial06.pdf" target="_blank">Reaction                       RuleML Tutorial</a> at <a href="http://2006.ruleml.org/group3.html#tutorials" target="_blank">RuleML'06</a>                       (<a href="../docs/Reaction-RuleM_tutorial06.pdf" target="_blank">slides</a>)</p>                    <p>Reaction RuleML Poster at <a href="http://2006.ruleml.org/" target="_blank">RuleML                       2006</a> (<a href="../docs/RuleML06_Poster.pdf" target="_blank">pdf</a>)</p>                    <p>Position Paper at Business Rules Forum 2006 (<a href="../docs/ReactionRuleML_BusinessRulesForum_06.pdf" target="_blank">pdf</a>)                     </p>                    <p>Reaction RuleML Consensual Presentation (<a href="../docs/RRCP.pdf" target="_blank">RRCP</a>)<br>                    </p>                    <p><a href="../publications.htm" >all publications&gt;&gt;</a></p>                    <p>&nbsp;</p></td>                </tr>				<tr>                   <td valign="top"><strong><font color="#FF8000">Members Section</font></strong></td>                </tr>                <tr>                   <td valign="top"><p><a href="../members/index.htm">Login</a></p></td>                </tr>                <tr>                   <td valign="top">&nbsp;</td>                </tr>              </table>            </div></td>        </tr>      </table>      <br />      <font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="190" height="8" align="absmiddle" /></span></font>     </td>    <td height="106" colspan="4" valign="top"> <table width="100%" border="0" cellspacing="10">        <tr>           <td height="610" colspan="2" valign="top" >             <div align="justify">               <h3>Reaction RuleML 0.1 Syntax</h3>              <p>               <p>The syntax of Reaction RuleML is specified by means of extended                 BNF (EBNF), i.e. alternatives are separated by vertical bars (|);                 zero to one occurrences are written in square brackets ([]) and                 zero to many occurrences in braces ({}).</p>              <p><b>RuleML HornLog Layer (<a href="http://www.ruleml.org/0.91/xsd/hornlog.xsd" target="_blank">RuleML                 hornlog.xsd</a>)</b></p>              <p><a href="http://www.ruleml.org/0.91/xsd/content_models_091.pdf">RuleML                 0.91 content models</a></p>              <p><b>HornLog2RR Layer (<a href="./hornlog2rr.xsd" target="_blank">hornlog2rr.xsd</a>)</b></p>              <p><em>Derivation Rules with Naf, Neg, Equal and Updates (redefined                 in <a href="./hornlog2rr.xsd" target="_blank">hornlog2rr.xsd</a>)</em></p>              <p>Naf ::= weak | Atom | Neg<br>                Neg ::= strong | Atom | And | Or | Neg | Implies | Equivalent                 | Forall | Exists | Equal <br>                Assert ::= [oid,] {formula | Atom | Implies | Equivalent | Forall                 | Equal | Neg }<br>                Retract ::= [oid,] {formula | Atom | Implies | Equivalent | Forall                 | Equal | Neg } <br>                Rulebase ::= [oid,] {formula | Atom | Implies | Equivalent | Forall                 | Equal | Neg}<br>                Implies ::= [oid,] (head, body) | (body, head) | {Atom | Naf |                 Neg | And | Or | Equal | Assert | Retract,} (Atom | Neg | Equal)<br>                Query ::= [oid,] {formula | Atom | Naf | Neg | Rulebase | And                 | Or | Entails | Exists | Equal}</p>              <p><b>RR Layer (<a href="./rr.xsd" target="_blank">rr.xsd</a>)</b></p>              <p><em>Reaction Rule Constructs (<a href="./modules/rr_module.xsd" target="_blank">rr_module.xsd</a>)</em></p>              <p>Reaction ::= [oid,] [event | Naf | Neg | Atom | Reaction | Message                 | Sequence | Disjunction | Xor | Conjunction | Concurrent | Not                 | Any | Aperiodic | Periodic,] [body | Naf | Neg | Atom | And                 | Or | Equal,] [action | Atom | Assert | Retract | Message | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic,] [postcond | Naf | Neg | Atom | And | Or | Equal,]                 [alternative | Atom | Assert | Retract | Message | Sequence |                 Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic]<br>                event ::= Naf | Neg | Atom | Message | Reaction | Sequence | Disjunction                 | Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic<br>                cond ::= Naf | Neg | Atom | And | Or | Equal<br>                action ::= Atom | Assert | Retract | Message | Sequence | Disjunction                 | Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic<br>                postcond ::= Naf | Neg | Atom | And | Or | Equal<br>                alternative ::= Atom | Assert | Retract | Message | Sequence |                 Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic </p>              <p><em>&quot;Derivation rules&quot; with nested local reaction rules                 (redefined in <a href="./rr.xsd" target="_blank">rr.xsd</a>)</em></p>              <p>Implies ::= [oid,] (head, body) | (body, head) | {Atom | Reaction                 | Naf | Neg | And | Or | Equal | Assert | Retract,} (Atom | Neg                 | Equal)<br>                Rulebase ::= [oid,] {formula | Atom | Implies | Reaction | Equivalent                 | Forall | Equal | Neg} </p>              <p><em>ID-Based Update Constructs (redefined in <a href="./rr.xsd" target="_blank">rr.xsd</a>)</em></p>              <p>Assert ::= [oid,] {formula | Rulebase | Atom | Implies | Reaction                 | Equivalent | Entails | Forall | Neg}<br>                Retract ::= [oid,] {formula | Rulebase | Atom | Implies | Reaction                 | Equivalent | Entails | Forall | Neg}</p>              <p><em>Message Constructs (<a href="./modules/rr_module.xsd" target="_blank">rr_module.xsd</a>)</em></p>              <p>Message ::= oid | Ind | Var | Expr, protocol | Ind | Var | Expr,                 sender | Ind | Var | Expr, content | Assert | Retract | Query                 | Inform<br>                protocol ::= Ind | Var | Expr<br>                sender ::= Ind | Var | Expr<br>                content ::=  Assert | Retract | Query | Inform</p>              <p><em>Time / Event Interval Constructs (<a href="./modules/algebra_module.xsd" target="_blank">algebra_module.xsd</a>)</em></p>              <p>time ::= Ind | Var | Expr<br>                interval ::= Interval | Plex | Var<br>                Interval ::= [oid,] event | action | time | Ind | Var | Expr |                 Sequence | Disjunction | Xor | Conjunction | Concurrent | Not                 | Any | Aperiodic | Periodic , event | action | time | Ind | Var                 | Expr | Sequence | Disjunction | Xor | Conjunction | Concurrent                 | Not | Any | Aperiodic | Periodic</p>              <p><em>Complex Event and Action Algebra Constructs (<a href="./modules/algebra_module.xsd" target="_blank">algebra_module.xsd</a>)</em></p>              <p> Sequence ::= [oid,] {event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor <br>                | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic                 }<br>                Disjunction ::= [oid,] {event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor <br>                | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic                 }<br>                Conjunction ::= [oid,] {event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor <br>                | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic                 }<br>                Xor ::= [oid,] {event | action | Ind | Var | Expr | Sequence |                 Disjunction | Xor <br>                | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic                 }<br>                Concurrent::= [oid,] {event | action | Ind | Var | Expr | Sequence                 | Disjunction |<br>                Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic                 }<br>                Not::= [oid,] event | action | Ind | Var | Expr | Sequence | Disjunction                 | Xor | Conjunction | <br>                Concurrent | Not | Any | Aperiodic | Periodic , interval | Interval                 | Plex | Var<br>                Any ::= [oid,] Ind | Data | Var , event | action | Ind | Var |                 Expr | Sequence <br>                | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic<br>                Aperiodic ::= [oid,] event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor | <br>                Conjunction | Concurrent | Not | Any | Aperiodic | Periodic, interval                 |<br>                Interval | Plex | Var<br>                Periodic ::= [oid,] time | Ind | Var | Expr, interval | Interval                 | Plex | Var<br>              </p>              <p><b>KR Temporal / Event / Action / Transition / Process Logics                 Layer (<a href="./kr.xsd" target="_blank">kr.xsd</a>)</b></p>              <p><em>State Processing Constructs (<a href="./modules/state_module.xsd" target="_blank">state_module.xsd</a>)</em></p>              <p>state ::= Ind | Var | Expr<br>                Initiates ::= [oid,] state | Ind | Var | Expr<br>                Terminates ::= [oid,] state | Ind | Var | Expr<br>                HoldsState: [oid,] (state | Ind | Var | Expr), (time | interval                 | Ind | Expr | Interval) </p>              <p>&nbsp;</p>              <p>&nbsp;</p>              <p>&nbsp;</p>              <h3>Reaction RuleML 0.1 Content Models</h3>              <p>The content models are specified in a DTD like notation</p>			                 <p><b>RuleML HornLog Layer (<a href="http://www.ruleml.org/0.91/xsd/hornlog.xsd" target="_blank">RuleML                 hornlog.xsd</a>)</b></p>              <p><a href="http://www.ruleml.org/0.91/xsd/content_models_091.pdf">RuleML                 0.91 content models</a></p>              <p><b>HornLog2RR Layer</b></p>              <p><em>Derivation Rules with Naf, Neg, Equal and Updates (redefined                 in <a href="./hornlog2rr.xsd" target="_blank">hornlog2rr.xsd</a>)</em></p>              <p>Naf : (weak | Atom | Neg)<br>                Neg : (strong | Atom | And | Or | Neg | Implies | Equivalent |                 Forall | Exists | Equal) <br>                Assert : (oid?, (formula | Atom | Implies | Equivalent | Forall                 | Equal | Neg )*)<br>                Retract : (oid?, (formula | Atom | Implies | Equivalent | Forall                 | Equal | Neg )*)<br>                Rulebase : (oid?, (formula | Atom | Implies | Equivalent | Forall                 | Equal | Neg)*)<br>                Implies: (oid?, (head, body) | (body, head) | ( (Atom | And |                 Or | Equal | Naf | Neg | Assert | Retract ), (Atom | Equal | Neg)                 ))<br>                Query: ( oid?, (formula | Atom | Naf | Neg | Rulebase | And |                 Or | Entails | Exists | Equal)* )</p>              <p><br>                Var: @mode; possible values: +|-|?; default value: ?; optional                 attribute <br>                Assert: @safety; possible values: transactional|normal; default                 value: normal; optional attribute<br>                Retract: @safety; possible values: transactional|normal; default                 value: normal; optional attribute<br>                Rel: @lang; possible values: java|modal; default value: java;                 optional attribute<br>                Rel: @in; possible values: no|yes|semi; default value:no; optional                 attribute <br>                Fun: @lang; possible values: java|modal; default value: java;                 optional attribute<br>                Fun : @in; possible values: no|yes|semi; default value:no; optional                 attribute </p>              <p><b>RR Layer (<a href="./rr.xsd" target="_blank">rr.xsd</a>)</b></p>              <p><em>Reaction Rule Constructs (<a href="./modules/rr_module.xsd" target="_blank">rr_module.xsd</a>)</em></p>              <p> Reaction: ( oid?, (event | Naf | Neg | Atom | Reaction | Message                 | Sequence | Disjunction | Xor | Conjunction | Concurrent | Not                 | Any | Aperiodic | Periodic)?, (body | Naf | Neg | Atom | And                 | Or | Equal)?, (action | Atom | Assert | Retract | Message |                 Sequence | Disjunction | Xor | Conjunction | Concurrent | Not                 | Any | Aperiodic | Periodic)?, (postcond | Naf | Neg | Atom |                 And | Or | Equal)?, (alternative | Atom | Assert | Retract | Message                 | Sequence | Disjunction | Xor | Conjunction | Concurrent | Not                 | Any | Aperiodic | Periodic)?)<br>                Reaction: @exec; possible values: active | passive | reasoning;                 default value: passive; required attribute<br>                Reaction: @kind; possible values: pattern combinations; default                 value: eca; required attribute<br>                Reaction: @eval; possible values: weak | strong; default value:                 strong; optional attribute<br>                event: ( Naf | Neg | Atom | Reaction | Message | Sequence | Disjunction                 | Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic                 | Ind | Var | Expr)<br>                event: @arg; possible values: arg1, arg2,..,argn; optional attribute                 <br>                action: ( Atom | Assert | Retract | Message | Sequence | Disjunction                 | Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic                 | Ind | Var | Expr)<br>                action: @arg; possible values: arg1, arg2,..,argn; optional attribute                 <br>                postcond: (Naf | Neg | Atom | And | Or | Equal)<br>                alternative: ( Atom | Assert | Retract | Message | Sequence |                 Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic)<br>                alternative: @arg; possible values: arg1, arg2,..,argn; optional                 attribute</p>              <p><em>&quot;Derivation rules&quot; with nested local reaction rules                 (redefined in <a href="./rr.xsd" target="_blank">rr.xsd</a>)</em></p>              <p>Implies: (oid?, (head, body) | (body, head) | ( (Atom | And |                 Or | Equal | Naf | Neg | Assert | Retract | Reaction), (Atom |                 Equal | Neg) ))<br>                Rulebase : (oid?, (formula | Atom | Reaction | Implies | Equivalent                 | Forall | Equal | Neg)*) </p>              <p><em>ID-Based Update Constructs (redefined in <a href="./rr.xsd" target="_blank">rr.xsd</a>                 with Reaction)</em></p>              <p>Assert: ( oid?, (formula | Rulebase | Atom | Implies | Reaction                 | Equivalent | Entails | Forall | Equal | Neg)* )<br>                Retract: ( oid?, (formula | Rulebase | Atom | Implies | Reaction                 | Equivalent | Entails | Forall | Equal | Neg)* )</p>              <p><em>Message Constructs (<a href="./modules/rr_module.xsd" target="_blank">rr_module.xsd</a>)</em></p>              <p>Message: ( (oid | Ind | Var | Expr), (protocol | Ind | Var |                 Expr), (sender | Ind | Var | Expr), (content | Assert | Retract | Query | Inform)                 )<br>                protocol: (Ind | Var | Expr)<br>                sender: (Ind | Var | Expr)<br>                content: (Assert | Retract | Query | Inform) <br>                Message: @mode; possible values: inbound | outbound; required                 attribute <br>                Message: @directive; possible values: performatives, e.g. ACL:inform;                 required attribute </p>              <p><em>Time / Event Interval Constructs (<a href="./modules/algebra_module.xsd" target="_blank">algebra_module.xsd</a>)</em></p>              <p>time: (Ind | Var | Expr)<br>                interval: (Interval | Plex | Var)<br>                Interval: ( oid?, event | action | time | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic , event | time | Ind | Var | Expr | Sequence | Disjunction                 | Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic)</p>              <p><em>Complex Event / Action Algebra Constructs (<a href="./modules/algebra_module.xsd" target="_blank">algebra_module.xsd)</a></em></p>              <p><br>                Sequence: (oid?, (event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic)*)<br>                Disjunction: (oid?, (event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic)*)<br>                Conjunction: (oid?, (event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic)*)<br>                Xor:(oid?, (event | action | Ind | Var | Expr | Sequence | Disjunction                 | Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic)*)<br>                Concurrent: (oid?, (event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic)*)<br>                Not: (oid?, event | action | Ind | Var | Expr | Sequence | Disjunction                 | Xor | Conjunction | Concurrent | Not | Any | Aperiodic | Periodic,                 interval | Interval | Plex | Var)<br>                Any: (oid?, Ind | Data | Var, event | action | Ind | Var | Expr                 |Sequence | Disjunction | Xor | Conjunction | Concurrent | Not                 | Any | Aperiodic | Periodic, interval | Interval | Plex | Var)<br>                Aperiodic: (oid?, event | action | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic, interval | Interval | Plex | Var)<br>                Periodic: (oid?, time | Ind | Var | Expr , interval | Interval                 | Plex | Var)<br>                Interval: ( oid?, event | action | time | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic , event | action | time | Ind | Var | Expr | Sequence                 | Disjunction | Xor | Conjunction | Concurrent | Not | Any | Aperiodic                 | Periodic)<br>              </p>              <p><b>KR Temporal / Event / Action / Transition / Process Logics                 Layer (<a href="./kr.xsd" target="_blank">kr.xsd</a>)</b></p>              <p><em>State Processing Constructs (<a href="./modules/state_module.xsd" target="_blank">state_module.xsd</a>)</em></p>              <p>state: (Ind | Var | Expr)<br>                Initiates: (oid?, (state | Ind | Var | Expr))<br>                Terminates: (oid?, (state | Ind | Var | Expr))<br>                HoldsState: (oid?, (state | Ind | Var | Expr), (time | interval                 | Ind | Var | Expr | Interval) )</p>              <p><a href="index.htm">&lt;&lt; back</a>               <p>&nbsp;</p>            </div></td>        </tr>      </table>      <p><font color="#FFFFFF"><span id="CommonPageHeader1_lblTagLine" class="normtextwhite" style="font-size: 10px;"><img src="../images/transparent.gif" width="590" height="8" align="absmiddle" /></span></font></p></td>  </tr></table><table width="800" cellpadding="0" cellspacing="1" border="0">  <tr>     <td ></td>  </tr></table><table width="800" border="0" cellspacing="0" cellpadding="0">  <tr valign="middle">     <td height="19" colspan="3" bgcolor="#666666"> <div align="center"></div>      <div align="center"><font color="#FFFFFF">Site Contact: <a href="http://ibis.in.tum.de/staff/paschke/index.htm" target="_blank">Adrian Paschke </a>-         Last Update 2006-10-13</font></div></td>  </tr>  <tr valign="middle">     <td width="187" height="19"> <div align="center"></div></td>    <td height="19">&nbsp;</td>    <td width="180" height="19">&nbsp;</td>  </tr></table><table width="800" border="0" cellspacing="0" cellpadding="0">  <tr>     <td align="center">           </td>  </tr>  <tr>    <td align="center"><div align="center"></div></td>  </tr></table></body></html>