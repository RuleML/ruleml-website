<?xml version="1.0" encoding="UTF-8"?>

<xs:schema
targetNamespace="http://www.ruleml.org/inspec"
xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns="http://www.ruleml.org/inspec"
>

	<xs:annotation>
		<xs:documentation xml:lang="en">
			XML Schema for a 'UR' Horn-Logic RuleML sublanguage
			File: urhornlog.xsd
			Version: 0.85
			Last Modification: 2003-12-17
		</xs:documentation>
	</xs:annotation>
	
	<xs:redefine schemaLocation="urdatalog.xsd">

		<!-- the label content models are extended to permit c(omplex )terms in addition to inds -->
		<xs:group name="_rbaselab.extend">
			<xs:choice>
				<xs:group ref="_rbaselab.extend"/>
				<xs:element ref="cterm"/>
			</xs:choice>
		</xs:group>
	
		<xs:group name="_rlab.extend">
			<xs:choice>
				<xs:group ref="_rlab.extend"/>
				<xs:element ref="cterm"/>
			</xs:choice>
		</xs:group>
	
		<!--
			atom's content model is extended to permit cterms and plexs:
			"((_opr, (_slot)*, (ind | var | cterm | plex)*, (_slot)*) | ((_slot)*, (ind | var | cterm | plex)+, (_slot)*, _opr))"
		-->	
		<xs:group name="atom.extend.extend">
			<xs:choice>
				<xs:group ref="atom.extend.extend"/>
				<xs:element ref="cterm"/>
				<xs:element ref="plex"/>
			</xs:choice>
		</xs:group>
		
		<!--
			the metarole _slot's content model is also extended to permit cterms and plexs:
			"(ind | var | cterm | plex)" 
		-->
		<xs:group name="_slot.extend">
			<xs:choice>
				<xs:group ref="_slot.extend"/>
				<xs:element ref="cterm"/>
				<xs:element ref="plex"/>
			</xs:choice>
		</xs:group>

	</xs:redefine>
	
	
	<xs:attributeGroup name="cterm.attlist"/>
	<xs:group name="cterm.content">
		<xs:choice>
			<xs:sequence>
				<!--
					content model is:
					"((_opc, (_slot)*, (ind | var | cterm | plex)*, (_slot)*) | ((_slot)*, (ind | var | cterm | plex)+, (_slot)*, _opc))"
				-->					
				<xs:element ref="_opc"/>
				<xs:element ref="_slot" minOccurs="0" maxOccurs="unbounded"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="ind"/>
					<xs:element ref="var"/>
					<xs:element ref="cterm"/>
					<xs:element ref="plex"/>
				</xs:choice>
				<xs:element ref="_slot" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:sequence>
				<xs:element ref="_slot" minOccurs="0" maxOccurs="unbounded"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="ind"/>
					<xs:element ref="var"/>
					<xs:element ref="cterm"/>
					<xs:element ref="plex"/>
				</xs:choice>
				<xs:element ref="_slot" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="_opc"/>
			</xs:sequence>
		</xs:choice>
	</xs:group>
	<xs:complexType name="cterm.type">
		<xs:group ref="cterm.content"/>
		<xs:attributeGroup ref="cterm.attlist"/>
	</xs:complexType>
	<xs:element name="cterm" type="cterm.type"/>


	<xs:attributeGroup name="_opc.attlist"/>
	<xs:group name="_opc.content">
		<xs:sequence>
			<xs:element ref="ctor"/>
		</xs:sequence>
		<!-- content model is "(ctor)" -->
	</xs:group>
	<xs:complexType name="_opc.type">
		<xs:group ref="_opc.content"/>
		<xs:attributeGroup ref="_opc.attlist"/>
	</xs:complexType>
	<xs:element name="_opc" type="_opc.type"/>

<!-- same as hornlog except for href attributes -->

	<xs:attributeGroup name="ctor.attlist">
		<xs:attribute name="href" type="xs:anyURI"/>
	</xs:attributeGroup>
	<xs:group name="ctor.content">
		<!-- content model is "(#PCDATA)" -->
  		<xs:sequence/>
	</xs:group>
	<xs:complexType name="ctor.type" mixed="true">
		<xs:group ref="ctor.content"/>
		<xs:attributeGroup ref="ctor.attlist"/>
	</xs:complexType>
	<xs:element name="ctor" type="ctor.type"/>

	
	<xs:attributeGroup name="plex.attlist"/>
	<xs:group name="plex.content">
		<xs:sequence>
			<!--	content model is: "((_slot)*, (ind | var | cterm | plex)*, (_slot)*)" -->					
			<xs:element ref="_slot" minOccurs="0" maxOccurs="unbounded"/>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ind"/>
				<xs:element ref="var"/>
				<xs:element ref="cterm"/>
				<xs:element ref="plex"/>
			</xs:choice>
			<xs:element ref="_slot" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="plex.type">
		<xs:group ref="plex.content"/>
		<xs:attributeGroup ref="plex.attlist"/>
	</xs:complexType>
	<xs:element name="plex" type="plex.type"/>
	
</xs:schema>