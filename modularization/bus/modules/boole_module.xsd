<xs:schema 
targetNamespace="http://www.ruleml.org/inspec"
xmlns="http://www.ruleml.org/inspec"
xmlns:xs="http://www.w3.org/2001/XMLSchema"
>

	<xs:annotation>
		<xs:documentation xml:lang="en">
			Boolean RuleML elements module.
			This is the XML Schema boolean elements module for RuleML.
			File: boole_module.xsd
			Version: 0.85 (fixed)
			Last Modification: 2004-05-14
			
			This module declares the following boolean RuleML elements:
			* and
			* or
			
			The approach is modelled after that used in "Modularization of XHTML in XML Schema"
			WD [http://www.w3.org/TR/xhtml-m12n-schema/], which will soon be integrated with
			"Modularization of XHTML" (REC-xhtml-modularization-20010410)
			[http://www.w3.org/TR/xhtml-modularization/].
		</xs:documentation>
	</xs:annotation>
	
	<!-- and -->
	<!-- content model is "((atom | or)*)" -->
	<xs:group name="and.extend">
		<xs:choice>
			<xs:element ref="atom"/>
			<xs:element ref="or"/>
		</xs:choice>
	</xs:group>
	<xs:attributeGroup name="and.attlist"/>
	<xs:group name="and.content">
		<xs:sequence>
			<xs:group ref="and.extend" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="and.type">
		<xs:group ref="and.content"/>
		<xs:attributeGroup ref="and.attlist"/>
	</xs:complexType>
	<xs:element name="and" type="and.type"/>

	<!-- or -->
	<!-- content model is "((atom | and)*)" -->
	<xs:group name="or.extend">
		<xs:choice>
			<xs:element ref="atom"/>
			<xs:element ref="and"/>
		</xs:choice>
	</xs:group>
	<xs:attributeGroup name="or.attlist"/>
	<xs:group name="or.content">
		<xs:choice>
			<xs:group ref="or.extend" minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="or.type">
		<xs:group ref="or.content"/>
		<xs:attributeGroup ref="or.attlist"/>
	</xs:complexType>
	<xs:element name="or" type="or.type"/>

</xs:schema>