<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">
<!--
var newWind;
function putJumpCode(){
	var cnt = 8;
	newWind.document.write('<html>\n');
	newWind.document.write('<title>HtmlDiff Navigation</title>\n');
	newWind.document.write('<body>\n');
	newWind.document.write('<form name="jump">\n');
	newWind.document.write('<input type="button" value=" |&lt; " name="First" onclick=goto_first(this.form)>&nbsp;')
	newWind.document.write('<input type="button" value=" &lt; " name="Prev" onclick=goto_prev(this.form)>&nbsp;&nbsp;\n');
	newWind.document.write('<select name=url onchange=menu_goto(this.form)> \n');
	for (var i=0; i<cnt ;i++ ) {
		newWind.document.write('<option value="#C'+i+'">Change #'+(i+1)+ '</option> \n');
		}
	newWind.document.write('');
	newWind.document.write('</select>&nbsp;&nbsp;\n');
	newWind.document.write('<input type="button" value=" &gt; " name="Next"\n');
	newWind.document.write('onclick=goto_next(this.form)>\n');
	newWind.document.write('<input type="button" value=" &gt| " name="Last"\n');
	newWind.document.write('onclick=goto_last(this.form)>\n');
	newWind.document.write('</form>\n');
	newWind.document.write('');
	newWind.document.write('<form method="POST">\n');
	newWind.document.write('<p align="center"><i><font size="3">Generated\n');
	newWind.document.write('by <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> \n');
	newWind.document.write('</form>\n');
	newWind.document.write('</body>\n');
	newWind.document.write('</html>\n');
	newWind.document.write('<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">\n');
	newWind.document.write('<!--\n');
	newWind.document.write('');
	newWind.document.write('var directCloseFlag=1;\n');
	newWind.document.write('');
	newWind.document.write('function menu_goto( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('  var baseurl = opener.location.href ;\n');
	newWind.document.write('  var idx = baseurl.indexOf("#");\n');
	newWind.document.write('  if (idx > -1) {\n');
	newWind.document.write('	baseurl = baseurl.slice(0, idx);\n');
	newWind.document.write('  }');
	newWind.document.write('  selecteditem = menuform.url.selectedIndex ;\n');
	newWind.document.write('  newurl = menuform.url.options[ selecteditem ].value ;\n');
	newWind.document.write('  if (newurl.length != 0) {\n');
	newWind.document.write('    	opener.top.location.href = baseurl + newurl ;\n');
	newWind.document.write('  }');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_prev( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.selectedIndex>0) menuform.url.selectedIndex--;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_first( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = 0;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_last( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = menuform.url.options.length-1;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_next( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.options.length > (menuform.url.selectedIndex+1))\n');
	newWind.document.write('	menuform.url.selectedIndex++;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function restore()\n');
	newWind.document.write('{\n');
	newWind.document.write('    	focus();\n');
	newWind.document.write('	menu_goto(jump);\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('goto_first(jump)\n');
	newWind.document.write('//-->\n');
	newWind.document.write('<');
	newWind.document.write('/SCRIPT>\n');
}
function pop_navigate(){
var isOpen = false
try {
isOpen = (newWind != null) && (!newWind.closed)
} catch (e) {}
  if (!isOpen) {
    newWind =  window.open("" ,"HtmlDiffJumpWindow","width=270,height=40")
    if (newWind.opener == null) { // for Nav 2.0x
      newWind.opener = self // this creates and sets a new prop
    }	putJumpCode();
  
} 
else 
{	newWind.execScript("restore()", "JavaScript");
  }
}
function exit(){
var isOpen = false
try {
isOpen = (newWind != null) && (!newWind.closed)
} catch (e) {}
if (isOpen) {
	newWind.close();
  }
}
//--></SCRIPT><body onunload=exit()><form method="POST">  <p align="center"><i><font size="3">Difference Analysis Generated by   <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> on  23/07/2004 1:24 PM</font></i>&nbsp;&nbsp;
  <input type="button" value="Navigate Changes" name="Navigate" onclick=pop_navigate()></p></form></body><html>
<style type="text/css">
<!--
.HDNormal {  color: #000000;background:  #ffffff;text-decoration:none}
.HDDeleted {  color: #ff0000;background:  #ffffff;text-decoration:line-through}
.HDAdded {  color: #000000;background:  #ffff00;text-decoration:none}
-->
</style>
<body>
<pre>
 <span class="HDNormal">
&lt;?xml version="1.0"<a name="diff" id="c0"><span class="HDAdded"> encoding="UTF-8"</span></a>?&gt;

<a name="diff" id="c1"><span class="HDDeleted">&lt;rulebase
</span></a><span class="HDDeleted">xmlns="http://www.ruleml.org/0.86/xsd"
</span><span class="HDDeleted">xsi:schemaLocation="http://www.ruleml.org/0.86/xsd http://www.ruleml.org/0.86/xsd/datalog.xsd"
</span><span class="HDDeleted">xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
</span><span class="HDDeleted">&gt;
</span><span class="HDAdded">&lt;Rulebase xmlns="http://www.ruleml.org/0.87/xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ruleml.org/0.87/xsd http://www.ruleml.org/0.87/xsd/datalog.xsd"&gt;
</span>
&lt;!-- start XML comment ...

This example rulebase contains four rules.
The first and second rules are implications; the third and fourth ones are facts.

In English:

The first rule implies that a person owns an object
if that person buys the object from a merchant and the person keeps the object.

As an OrdLab Tree:

 imp~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          *                         *
     head *                    body *
          *                         *
        atom~~~~~~~~~~~~~~~~~~     and~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                 *     |     |           |                                   |
             opr *     |     |           |                                   |
                 *     |     |           |                                   |        
                rel   var   var        atom~~~~~~~~~~~~~~~~~~~~~~~~~~~     atom~~~~~~~~~~~~~~~~~~
                 .     .     .                  *     |      |       |              *     |     |
                 .     .     .              opr *     |      |       |          opr *     |     |
                 .     .     .                  *     |      |       |              *     |     |
                own  person object             rel   var    var     var            rel   var   var
                                                .     .      .       .              .     .     . 
                                                .     .      .       .              .     .     .
                                                .     .      .       .              .     .     .
                                               buy  person merchant object        keep  person object

... end XML comment --&gt;


&lt;<a name="diff" id="c2"><span class="HDDeleted">imp</span></a><span class="HDAdded">Imp</span>&gt;
  &lt;<span class="HDDeleted">_</span>head&gt;
    &lt;<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
      &lt;<span class="HDDeleted">_opr&gt;&lt;rel&gt;</span><span class="HDAdded">opr&gt;&lt;Rel&gt;</span>own&lt;/<span class="HDDeleted">rel&gt;&lt;/_</span><span class="HDAdded">Rel&gt;&lt;/</span>opr&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>person&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>object&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
    &lt;/<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
  &lt;/<span class="HDDeleted">_</span>head&gt;
  &lt;<span class="HDDeleted">_</span>body&gt;
    &lt;!-- explicit 'and' --&gt;
    &lt;<a name="diff" id="c3"><span class="HDDeleted">and</span></a><span class="HDAdded">And</span>&gt;
      &lt;<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
        &lt;<span class="HDDeleted">_opr&gt;&lt;rel&gt;</span><span class="HDAdded">opr&gt;&lt;Rel&gt;</span>buy&lt;/<span class="HDDeleted">rel&gt;&lt;/_</span><span class="HDAdded">Rel&gt;&lt;/</span>opr&gt;
        &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>person&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
        &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>merchant&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
        &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>object&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
      &lt;/<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
      &lt;<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
        &lt;<span class="HDDeleted">_opr&gt;&lt;rel&gt;</span><span class="HDAdded">opr&gt;&lt;Rel&gt;</span>keep&lt;/<span class="HDDeleted">rel&gt;&lt;/_</span><span class="HDAdded">Rel&gt;&lt;/</span>opr&gt;
        &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>person&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
        &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>object&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
      &lt;/<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
    &lt;/<span class="HDDeleted">and</span><span class="HDAdded">And</span>&gt;
  &lt;/<span class="HDDeleted">_</span>body&gt;
&lt;/<span class="HDDeleted">imp</span><span class="HDAdded">Imp</span>&gt;

&lt;!-- The second rule implies that a person buys an object from a merchant
if the merchant sells the object to the person. --&gt;

&lt;<a name="diff" id="c4"><span class="HDDeleted">imp</span></a><span class="HDAdded">Imp</span>&gt;
  &lt;<span class="HDDeleted">_</span>head&gt;
    &lt;<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
      &lt;<span class="HDDeleted">_opr&gt;&lt;rel&gt;</span><span class="HDAdded">opr&gt;&lt;Rel&gt;</span>buy&lt;/<span class="HDDeleted">rel&gt;&lt;/_</span><span class="HDAdded">Rel&gt;&lt;/</span>opr&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>person&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>merchant&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>object&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
    &lt;/<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
  &lt;/<span class="HDDeleted">_</span>head&gt;
  &lt;<span class="HDDeleted">_</span>body&gt;
    &lt;<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
      &lt;<span class="HDDeleted">_opr&gt;&lt;rel&gt;</span><span class="HDAdded">opr&gt;&lt;Rel&gt;</span>sell&lt;/<span class="HDDeleted">rel&gt;&lt;/_</span><span class="HDAdded">Rel&gt;&lt;/</span>opr&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>merchant&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>person&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
      &lt;<span class="HDDeleted">var&gt;</span><span class="HDAdded">Var&gt;</span>object&lt;/<span class="HDDeleted">var</span><span class="HDAdded">Var</span>&gt;
    &lt;/<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
  &lt;/<span class="HDDeleted">_</span>body&gt;
&lt;/<span class="HDDeleted">imp</span><span class="HDAdded">Imp</span>&gt;
 
 
&lt;!-- The third rule is a fact that asserts that
John sells XMLBible to Mary. --&gt;
 
&lt;<a name="diff" id="c5"><span class="HDDeleted">fact</span></a><span class="HDAdded">Fact</span>&gt;
  &lt;<span class="HDDeleted">_</span>head&gt;
    &lt;<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
      &lt;<span class="HDDeleted">_opr&gt;&lt;rel&gt;</span><span class="HDAdded">opr&gt;&lt;Rel&gt;</span>sell&lt;/<span class="HDDeleted">rel&gt;&lt;/_</span><span class="HDAdded">Rel&gt;&lt;/</span>opr&gt;
      &lt;<span class="HDDeleted">ind </span><span class="HDAdded">Ind&gt;</span>John&lt;/<span class="HDDeleted">ind</span><span class="HDAdded">Ind</span>&gt;
      &lt;<span class="HDDeleted">ind&gt;</span><span class="HDAdded">Ind&gt;</span>Mary&lt;/<span class="HDDeleted">ind</span><span class="HDAdded">Ind</span>&gt;
      &lt;<span class="HDDeleted">ind&gt;</span><span class="HDAdded">Ind&gt;</span>XMLBible&lt;/<span class="HDDeleted">ind</span><span class="HDAdded">Ind</span>&gt;
    &lt;/<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
  &lt;/<span class="HDDeleted">_</span>head&gt;
&lt;/<span class="HDDeleted">fact</span><span class="HDAdded">Fact</span>&gt;
 
&lt;!-- The fourth rule is a fact that asserts that
Mary keeps XMLBible.
 
Observe that this fact is binary - i.e., there are two arguments
for the relation. RDF viewed as a logical knowledge representation
is, likewise, binary, although its arguments have type restrictions,
e.g., the first must be a resource (basically, a URI). Some of the
DTD's on the RuleML website handle URL's/URI's (UR's); see especially
urc-datalog.dtd for inferencing with RDF-like facts --&gt;
 
&lt;<a name="diff" id="c6"><span class="HDDeleted">fact</span></a><span class="HDAdded">Fact</span>&gt;
  &lt;<span class="HDDeleted">_</span>head&gt;
    &lt;<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
      &lt;<span class="HDDeleted">_opr&gt;&lt;rel&gt;</span><span class="HDAdded">opr&gt;&lt;Rel&gt;</span>keep&lt;/<span class="HDDeleted">rel&gt;&lt;/_</span><span class="HDAdded">Rel&gt;&lt;/</span>opr&gt;
      &lt;<span class="HDDeleted">ind&gt;</span><span class="HDAdded">Ind&gt;</span>Mary&lt;/<span class="HDDeleted">ind</span><span class="HDAdded">Ind</span>&gt;
      &lt;<span class="HDDeleted">ind&gt;</span><span class="HDAdded">Ind&gt;</span>XMLBible&lt;/<span class="HDDeleted">ind</span><span class="HDAdded">Ind</span>&gt;
    &lt;/<span class="HDDeleted">atom</span><span class="HDAdded">Atom</span>&gt;
  &lt;/<span class="HDDeleted">_</span>head&gt;
&lt;/<span class="HDDeleted">fact</span><span class="HDAdded">Fact</span>&gt;
  
<a name="diff" id="c7"><span class="HDDeleted">&lt;/rulebase&gt;</span></a><span class="HDAdded">&lt;/Rulebase&gt;
</span></span>
</pre>
</body>
</html>
