% Likes swimming indoors for long periods and walking outdoors.
% Sample Wellness Rules for Activities of Person p0004
% ----------------------------------------------------
%0:40,1:00 Walks
%1:00,1:20,1:30 Swims
%----------------
%Profile - P0004
%----------------

%myActivity(p0004,Activity:Walking,Out,1:integer,20:integer,
	%dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	%dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	%?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel).

%CALENDAR
%--------
calendar(p0004,c0004).

%EVENTS - Possible
%-----------------------------

%May 24, 2010 1 hour time slot Sunny
event(c0004,?:Activity,Possible,
		dateTime[2010:integer,5:integer,24:integer,10:integer,15:integer],
		dateTime[2010:integer,5:integer,24:integer,11:integer,15:integer]).
		
%May 25, 2010 20 minute time slot	Scattered Thunderstorms
event(c0004,?:Activity,Possible,
		dateTime[2010:integer,5:integer,25:integer,16:integer,0:integer],
		dateTime[2010:integer,5:integer,25:integer,16:integer,20:integer]).	
		
%May 26, 2010 40 minute time slot	Partly Cloudy
event(c0004,?:Activity,Possible,
		dateTime[2010:integer,5:integer,26:integer,12:integer,0:integer],
		dateTime[2010:integer,5:integer,26:integer,12:integer,40:integer]).

%July 28, 2010 One hour and 30 minute time slot
event(c0004,?:Activity,Possible,
		dateTime[2010:integer,7:integer,28:integer,12:integer,0:integer],
		dateTime[2010:integer,7:integer,28:integer,13:integer,30:integer]).
		
%MAP
%---
map(p0004,m0001).

%EXPECTED FITNESS LEVELS
%-----------------------
fitness(p0004,
	dateTime[2010:integer,5:integer,21:integer,10:integer,0:integer], 3:integer).
fitness(p0004,
	dateTime[2010:integer,5:integer,22:integer,16:integer,0:integer], 3:integer).
fitness(p0004,
	dateTime[2010:integer,5:integer,23:integer,13:integer,0:integer], 5:integer).
fitness(p0004,
	dateTime[2010:integer,5:integer,24:integer,10:integer,15:integer], 3:integer).
fitness(p0004,
	dateTime[2010:integer,5:integer,25:integer,16:integer,0:integer], 3:integer).
fitness(p0004,
	dateTime[2010:integer,5:integer,26:integer,12:integer,0:integer], 2:integer).
fitness(p0004,
	dateTime[2010:integer,7:integer,28:integer,12:integer,0:integer], 2:integer).


%MEETUP LOCATION FITNESS LEVELS
%------------------------------
level(p0004,?:Walking,Out,ConniesStation,
	dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],3:integer).
level(p0004,?:Walking,Out,ConniesStation,
	dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],2:integer).
level(p0004,?:Swimming,In,LukesHall,
	dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],2:integer).
level(p0004,?:Swimming,In,LukesHall,
	dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],3:integer).
level(p0004,?:Swimming,In,LukesHall,
	dateTime[0:integer,0:integer,0:integer,1:integer,30:integer],4:integer).



%Preferred Group Sizes
%---------------------
groupSize(p0004,?:Walking,Out,1:integer,20:integer).
groupSize(p0004,?:Swimming,In,1:integer,20:integer).
	
%--------------------------
%Activities - Walking (Out)
%--------------------------
myActivity(p0004,Activity:Walking,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0004,?CalendarID),
  event(?CalendarID,?Activity:Walking,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0004,?Activity:Walking,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Spring),
 forecast(?Location,
	dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute],
	?LowTemp,?HighTemp,?AvgTemp,?Condition:SunnyWeather),
  greaterThanOrEqual(?AvgTemp,12:integer),
  map(p0004,?Map),
  meetup(?Map,?Activity:Walking,Out,?Place),
  level(p0004,?Activity:Walking,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0004,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).
 
	
%--------------------------
%Activities - Swimming(In)
%--------------------------

myActivity(p0004,Activity:Swimming,In,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0004,?CalendarID),
  event(?CalendarID,?Activity:Swimming,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0004,?Activity:Swimming,In,?MinRSVP,?MaxRSVP),
  map(p0004,?Map),
  meetup(?Map,?Activity:Swimming,In,?Place),
  level(p0004,?Activity:Swimming,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0004,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

