%----------------
%Profile - p0003
%----------------
	
	%CALENDAR
	%--------
	calendar(p0003,c0003).
	
	%DATETIMES FOR CALENDAR EVENTS
	%-----------------------------
	event(c0003,?:Activity,Possible,
			dateTime[2009:integer,6:integer,15:integer,11:integer,15:integer],
			dateTime[2009:integer,6:integer,15:integer,11:integer,45:integer]).
	event(c0003,?:Activity,Possible,
			dateTime[2009:integer,6:integer,13:integer,13:integer,0:integer],
			dateTime[2009:integer,6:integer,13:integer,14:integer,0:integer]).	
	event(c0003,?:Activity,Possible,
			dateTime[2009:integer,11:integer,13:integer,14:integer,30:integer],
			dateTime[2009:integer,11:integer,13:integer,16:integer,0:integer]).
	event(c0003,?:Activity,Possible,
			dateTime[2009:integer,11:integer,15:integer,12:integer,30:integer],
			dateTime[2009:integer,11:integer,15:integer,15:integer,0:integer]).
			
	%MAP
	%---
	map(p0003,m0001).

	%EXPECTED FITNESS LEVELS
	%-----------------------
	fitness(p0003,
		dateTime[2009:integer,6:integer,15:integer,11:integer,15:integer], 4:integer).
	fitness(p0003,
		dateTime[2009:integer,6:integer,13:integer,13:integer,0:integer], 5:integer).
	fitness(p0003,
		dateTime[2009:integer,11:integer,13:integer,14:integer,30:integer], 6:integer).
	fitness(p0003,
		dateTime[2009:integer,11:integer,14:integer,12:integer,30:integer], 7:integer).

	%MEETUP LOCATION FITNESS LEVELS
	%------------------------------
	level(p0003,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],2:integer).
	level(p0003,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],3:integer).
	level(p0003,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],4:integer).
	level(p0003,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],5:integer).
	level(p0003,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],6:integer).

	level(p0003,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0003,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0003,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],3:integer).
	level(p0003,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],4:integer).
	level(p0003,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],5:integer).

	level(p0003,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],3:integer).
	level(p0003,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],4:integer).
	level(p0003,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],5:integer).
	level(p0003,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],6:integer).
	level(p0003,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],7:integer).

	level(p0003,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0003,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0003,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],3:integer).
	level(p0003,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],4:integer).
	level(p0003,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],5:integer).

	level(p0003,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0003,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],1:integer).
	level(p0003,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],2:integer).
	level(p0003,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],2:integer).
	level(p0003,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],2:integer).

	level(p0003,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0003,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0003,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],3:integer).
	level(p0003,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],4:integer).
	level(p0003,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],6:integer).

	level(p0003,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],2:integer).
	level(p0003,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0003,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],3:integer).
	level(p0003,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],3:integer).
	level(p0003,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],4:integer).

	level(p0003,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0003,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0003,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],4:integer).
	level(p0003,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],5:integer).
	level(p0003,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],6:integer).
	
	level(p0003,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0003,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0003,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],3:integer).
	level(p0003,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],4:integer).
	level(p0003,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],5:integer).

	level(p0003,?:Hiking,Out,ApplePark,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],2:integer).
	level(p0003,?:Hiking,Out,ApplePark,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],4:integer).
	level(p0003,?:Hiking,Out,ApplePark,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],6:integer).
	level(p0003,?:Hiking,Out,ApplePark,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],10:integer).
	level(p0003,?:Hiking,Out,ApplePark,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],10:integer).
	
	level(p0003,Baseball,Out,Fenway,dateTime[0:integer,0:integer,0:integer,0:integer,10:integer,0:integer],2:integer).
	level(p0003,Baseball,Out,Fenway,dateTime[0:integer,0:integer,0:integer,0:integer,20:integer,0:integer],4:integer).
	level(p0003,Baseball,Out,Fenway,dateTime[0:integer,0:integer,0:integer,0:integer,40:integer,0:integer],6:integer).
	level(p0003,Baseball,Out,Fenway,dateTime[0:integer,0:integer,0:integer,1:integer,0:integer,0:integer],10:integer).
	level(p0003,Baseball,Out,Fenway,dateTime[0:integer,0:integer,0:integer,1:integer,20:integer,0:integer],10:integer).
	
	%Preferred Group Sizes
	%---------------------
	groupSize(p0003,?:Walking,Out,1:integer,4:integer).
	groupSize(p0003,?:Running,Out,2:integer,6:integer).
	groupSize(p0003,?:Swimming,In,1:integer,5:integer).
	groupSize(p0003,?:Swimming,Out,2:integer,5:integer).
	groupSize(p0003,?:Skating,Out,1:integer,6:integer).
	groupSize(p0003,?:Yoga,In,1:integer,13:integer).
	groupSize(p0003,?:Hiking,Out,1:integer,15:integer).
	groupSize(p0003,?:Baseball,Out,10:integer,25:integer).
	
%--------------------------
%Activities - Walking (Out)
%--------------------------

myActivity(p0003,Activity:Walking,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Walking,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,?Activity:Walking,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Spring),
%  forecast(?Location,dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute],?LowTemp,?HighTemp,?AvgTemp,?Condition),
%  notEqual(?Condition,"Raining"),
  map(p0003,?Map),
  meetup(?Map,?Activity:Walking,Out,?Place),
  level(p0003,?Activity:Walking,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

%--------------------------
%Activities - Running (Out)
%--------------------------

myActivity(p0003,Activity:Running,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Running,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,?Activity:Running,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Spring),
  forecast(?Location,
	dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute],
	?LowTemp,?HighTemp,?AvgTemp,?Condition),
  %notEqual(?Condition,?:RainyWeather),
  map(p0003,?Map),
  meetup(?Map,?Activity:Running,Out,?Place),
  level(p0003,?Activity:Running,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

%--------------------------
%Activities - Swimming (In)
%--------------------------

myActivity(p0003,Activity:Swimming,In,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Swimming,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,Running,In,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Winter),
  map(p0003,?Map),
  meetup(?Map,?Activity:Swimming,In,?Place),
  level(p0003,?Activity:Swimming,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

%---------------------------
%Activities - Swimming (Out)
%---------------------------

myActivity(p0003,Activity:Swimming,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Swimming,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,?Activity:Swimming,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Summer),
  map(p0003,?Map),
% forecast(?Location,
%	dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute,?AnySecond],
%	?LowTemp,?HighTemp,?AvgTemp,"Sunny"),
%  greaterThanOrEqual(?AvgTemp,27:integer),
  map(p0003,?Map),
  meetup(?Map,?Activity:Swimming,Out,?Place),
  level(p0003,?Activity:Swimming,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).


%--------------------------
%Activities - Skating (Out)
%--------------------------


myActivity(p0003,Activity:Skating,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Skating,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,?Activity:Skating,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Winter),
  map(p0003,?Map),
%forecast(?Location,
%	dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute,?AnySecond],
%	?LowTemp,?HighTemp,?AvgTemp,?Conditions),
%  notEqual(?Conditions,"Snowing"),
% lessThanOrEqual(?AvgTemp,0:integer),
  map(p0003,?Map),
  meetup(?Map,?Activity:Skating,Out,?Place),
  level(p0003,?Activity:Skating,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).


%-------------------------
%Activities - Yogaing (In)
%-------------------------

myActivity(p0003,Activity:Yoga,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Yoga,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,?Activity:Yoga,In,?MinRSVP,?MaxRSVP),
  map(p0003,?Map),
  meetup(?Map,?Activity:Yoga,In,?Place),
  level(p0003,?Activity:Yoga,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).
  
  
%-------------------------
%Activities - Hiking (Out)
%-------------------------

myActivity(p0003,Activity:Hiking,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Hiking,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,?Activity:Hiking,In,?MinRSVP,?MaxRSVP),
  map(p0003,?Map),
  meetup(?Map,?Activity:Hiking,In,?Place),
  level(p0003,?Activity:Hiking,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).
  
    
%-------------------------
%Activities - Baseball (Out)
%-------------------------

myActivity(p0003,Activity:Baseball,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0003,?CalendarID),
  event(?CalendarID,?Activity:Baseball,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0003,?Activity:Baseball,In,?MinRSVP,?MaxRSVP),
  map(p0003,?Map),
  meetup(?Map,?Activity:Baseball,In,?Place),
  level(p0003,?Activity:Baseball,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0003,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).