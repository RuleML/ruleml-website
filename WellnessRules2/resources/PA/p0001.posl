% Test Query:
% myActivity(p0001,?Activity,?InOut,1:integer,20:integer,?StartTime,?EndTime,?Place,?Duration,?Level).

% Sample Wellness Rules for Activities of Person p0001
% ----------------------------------------------------

%----------------
%Profile - P0001
%----------------
	
	%CALENDAR
	%--------
	calendar(p0001,c0001).
	
	%EVENTS - Possible
	%-----------------------------
	event(c0001,?:Activity,Possible,
			dateTime[2009:integer,6:integer,15:integer,10:integer,15:integer],
			dateTime[2009:integer,6:integer,15:integer,11:integer,15:integer]).
	event(c0001,?:Activity,Possible,
			dateTime[2009:integer,6:integer,13:integer,16:integer,0:integer],
			dateTime[2009:integer,6:integer,13:integer,17:integer,15:integer]).	
	event(c0001,?:Activity,Possible,
			dateTime[2009:integer,12:integer,14:integer,14:integer,0:integer],
			dateTime[2009:integer,12:integer,14:integer,15:integer,30:integer]).
	event(c0001,?:Activity,Possible,
			dateTime[2009:integer,12:integer,12:integer,12:integer,0:integer],
			dateTime[2009:integer,12:integer,12:integer,17:integer,0:integer]).
	
	%EVENTS - PAST
	%-------------
	event(c0001,?:Activity,Past,
			dateTime[2009:integer,6:integer,12:integer,16:integer,0:integer],
			dateTime[2009:integer,6:integer,12:integer,17:integer,0:integer]).
			
	%MAP
	%---
	map(p0001,m0001).

	%EXPECTED FITNESS LEVELS
	%-----------------------
	fitness(p0001,
		dateTime[2009:integer,6:integer,15:integer,10:integer,15:integer], 6:integer).
	fitness(p0001,
		dateTime[2009:integer,6:integer,13:integer,16:integer,0:integer], 4:integer).
	fitness(p0001,
		dateTime[2009:integer,12:integer,14:integer,14:integer,0:integer], 3:integer).
	fitness(p0001,
		dateTime[2009:integer,12:integer,12:integer,12:integer,0:integer], 4:integer).

	%MEETUP LOCATION FITNESS LEVELS
	%------------------------------
	level(p0001,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer], 1:integer).
	level(p0001,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0001,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],3:integer).
	level(p0001,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],4:integer).
	level(p0001,?:Walking,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],5:integer).

	level(p0001,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],2:integer).
	level(p0001,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],3:integer).
	level(p0001,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],4:integer).
	level(p0001,?:Walking,Out,DebbiesValley,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],5:integer).
	level(p0001,?:Walking,Out,DebbiesValley,	
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],7:integer).

	level(p0001,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],3:integer).
	level(p0001,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],4:integer).
	level(p0001,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],5:integer).
	level(p0001,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],8:integer).
	level(p0001,?:Running,Out,ConniesStation,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],9:integer).

	level(p0001,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],2:integer).
	level(p0001,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],3:integer).
	level(p0001,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],5:integer).
	level(p0001,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],7:integer).
	level(p0001,?:Running,Out,PetersWagon,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],10:integer).

	level(p0001,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0001,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0001,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],4:integer).
	level(p0001,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],6:integer).
	level(p0001,?:Running,Out,AllensBrook,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],8:integer).
	
	level(p0001,?:Running,In,JoesGym,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],5:integer).
	level(p0001,?:Running,In,JoesGym,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],8:integer).
	level(p0001,?:Running,In,JoesGym,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],8:integer).
	level(p0001,?:Running,In,JoesGym,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],9:integer).
	level(p0001,?:Running,In,JoesGym,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],10:integer).

	level(p0001,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],2:integer).
	level(p0001,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],3:integer).
	level(p0001,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],4:integer).
	level(p0001,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],5:integer).
	level(p0001,?:Swimming,In,JohnsPool,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],7:integer).

	level(p0001,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],3:integer).
	level(p0001,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],4:integer).
	level(p0001,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],5:integer).
	level(p0001,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],6:integer).
	level(p0001,?:Swimming,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],9:integer).

	level(p0001,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],2:integer).
	level(p0001,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],3:integer).
	level(p0001,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],5:integer).
	level(p0001,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],7:integer).
	level(p0001,?:Skating,Out,SandrasLake,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],8:integer).
	
	level(p0001,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,0:integer,10:integer],1:integer).
	level(p0001,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,0:integer,20:integer],2:integer).
	level(p0001,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,0:integer,40:integer],3:integer).
	level(p0001,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,1:integer,0:integer],4:integer).
	level(p0001,?:Yoga,In,LukesHall,
		dateTime[0:integer,0:integer,0:integer,1:integer,20:integer],5:integer).
	
	%Preferred Group Sizes
	%---------------------
	groupSize(p0001,?:Walking,Out,1:integer,20:integer).
	groupSize(p0001,?:Running,Out,2:integer,8:integer).
	groupSize(p0001,?:Running,In,2:integer,6:integer).
	groupSize(p0001,?:Swimming,In,1:integer,3:integer).
	groupSize(p0001,?:Swimming,Out,2:integer,4:integer).
	groupSize(p0001,?:Skating,Out,1:integer,12:integer).
	groupSize(p0001,?:Yoga,In,1:integer,7:integer).
	
	
%--------------------------
%Activities - Walking (Out)
%--------------------------
%--- all seesm to be working except rule
myActivity(p0001,Activity:Walking,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0001,?CalendarID),
  event(?CalendarID,?Activity:Walking,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0001,?Activity:Walking,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Spring),
  forecast(?Location,
  	dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute],
  	?LowTemp,?HighTemp,?AvgTemp,?Condition),
  notEqual(?Condition,?:RainyWeather),
  map(p0001,?Map),
  meetup(?Map,?Activity:Walking,Out,?Place),
  level(p0001,?Activity:Walking,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0001,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).
  
%--------------------------
%Activities - Running (Out)
%--------------------------

myActivity(p0001,Activity:Running,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0001,?CalendarID),
  event(?CalendarID,?Activity:Running,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0001,?Activity:Running,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Spring),
  forecast(?Location,
   dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute],
   ?LowTemp,?HighTemp,?AvgTemp,?Condition),
  %notEqual(?Condition,?:RainyWeather),
  map(p0001,?Map),
  meetup(?Map,?Activity:Running,Out,?Place),
  level(p0001,?Activity:Running,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0001,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).
  
%-------------------------
%Activities - Running (In)
%-------------------------

myActivity(p0001,Activity:Running,In,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0001,?CalendarID),
  event(?CalendarID,?Activity:Running,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  %yesterday(?StartTime,?StartTimeYDay,?EndTime,?EndTimeYDay),
  %naf(event(?Calendar,?Activity:Running,Past,?StartTimeYDay,?EndTimeYDay)),
  participation(p0001,?Activity:Running,In,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Spring),
  map(p0001,?Map),
  meetup(?Map,?Activity:Running,In,?Place),
  level(p0001,?Activity:Running,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0001,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

%--------------------------
%Activities - Swimming (In)
%--------------------------

myActivity(p0001,Activity:Swimming,In,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0001,?CalendarID),
  event(?CalendarID,?Activity:Swimming,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0001,Running,In,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Winter),
  map(p0001,?Map),
  meetup(?Map,?Activity:Swimming,In,?Place),
  level(p0001,?Activity:Swimming,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0001,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(p0001,?Activity:Swimming,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

%---------------------------
%Activities - Swimming (Out)
%---------------------------

myActivity(p0001,Activity:Swimming,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0001,?CalendarID),
  event(?CalendarID,?Activity:Swimming,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0001,?Activity:Swimming,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Summer),
  map(p0001,?Map),
  forecast(?Location,
	dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute],
	?LowTemp,?HighTemp,?AvgTemp,?Condition:SunnyWeather),
  greaterThanOrEqual(?AvgTemp,27:integer),
  map(p0001,?Map),
  meetup(?Map,?Activity:Swimming,Out,?Place),
  level(p0001,?Activity:Swimming,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0001,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

%--------------------------
%Activities - Skating (Out)
%--------------------------

myActivity(p0001,Activity:Skating,Out,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0001,?CalendarID),
  event(?CalendarID,?Activity:Skating,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0001,?Activity:Skating,Out,?MinRSVP,?MaxRSVP),
  season(?StartDay,?StartMonth,Winter),
  map(p0001,?Map),
  %forecast(?Location,
	%dateTime[?StartYear,?StartMonth,?StartDay,?AnyHour,?AnyMinute],
	%?LowTemp,?HighTemp,?AvgTemp,?Conditions),
 % notEqual(?Conditions,"Snowing"),
  %lessThanOrEqual(?AvgTemp,0:integer),
  map(p0001,?Map),
  meetup(?Map,?Activity:Skating,Out,?Place),
  level(p0001,?Activity:Skating,Out,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0001,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).

%-------------------------
%Activities - Yoga (In)
%-------------------------

myActivity(p0001,Activity:Yoga,In,?MinRSVP,?MaxRSVP,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute],
	?Place,dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel) :-
  calendar(p0001,?CalendarID),
  event(?CalendarID,?Activity:Yoga,Possible,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]),
  participation(p0001,?Activity:Yoga,In,?MinRSVP,?MaxRSVP),
  map(p0001,?Map),
  meetup(?Map,?Activity:Yoga,In,?Place),
  level(p0001,?Activity:Yoga,In,?Place,
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],?FitnessLevel),
  fitness(p0001,
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute], ?ExpectedFitness),	
  greaterThanOrEqual(?ExpectedFitness,?FitnessLevel),
  goodDuration(
	dateTime[?DurYear,?DurMonth,?DurDay,?DurHour,?DurMinute],
	dateTime[?StartYear,?StartMonth,?StartDay,?StartHour,?StartMinute],
	dateTime[?EndYear,?EndMonth,?EndDay,?EndHour,?EndMinute]).