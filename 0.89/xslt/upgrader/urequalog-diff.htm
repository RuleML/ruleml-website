<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">
<!--
var newWind;
function putJumpCode(){
	var cnt = 2;
	newWind.document.write('<html>\n');
	newWind.document.write('<title>HtmlDiff Navigation</title>\n');
	newWind.document.write('<body>\n');
	newWind.document.write('<form name="jump">\n');
	newWind.document.write('<input type="button" value=" |&lt; " name="First" onclick=goto_first(this.form)>&nbsp;')
	newWind.document.write('<input type="button" value=" &lt; " name="Prev" onclick=goto_prev(this.form)>&nbsp;&nbsp;\n');
	newWind.document.write('<select name=url onchange=menu_goto(this.form)> \n');
	for (var i=0; i<cnt ;i++ ) {
		newWind.document.write('<option value="#c'+i+'">Change #'+(i+1)+ '</option> \n');
		}
	newWind.document.write('');
	newWind.document.write('</select>&nbsp;&nbsp;\n');
	newWind.document.write('<input type="button" value=" &gt; " name="Next"\n');
	newWind.document.write('onclick=goto_next(this.form)>\n');
	newWind.document.write('<input type="button" value=" &gt| " name="Last"\n');
	newWind.document.write('onclick=goto_last(this.form)>\n');
	newWind.document.write('</form>\n');
	newWind.document.write('');
	newWind.document.write('<form method="POST">\n');
	newWind.document.write('<p align="center"><i><font size="3">Generated\n');
	newWind.document.write('by <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> \n');
	newWind.document.write('</form>\n');
	newWind.document.write('</body>\n');
	newWind.document.write('</html>\n');
	newWind.document.write('<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">\n');
	newWind.document.write('<!--\n');
	newWind.document.write('');
	newWind.document.write('var directCloseFlag=1;\n');
	newWind.document.write('');
	newWind.document.write('function menu_goto( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('  var baseurl = opener.location.href ;\n');
	newWind.document.write('  var idx = baseurl.indexOf("#");\n');
	newWind.document.write('  if (idx > -1) {\n');
	newWind.document.write('	baseurl = baseurl.slice(0, idx);\n');
	newWind.document.write('  }');
	newWind.document.write('  selecteditem = menuform.url.selectedIndex ;\n');
	newWind.document.write('  newurl = menuform.url.options[ selecteditem ].value ;\n');
	newWind.document.write('  if (newurl.length != 0) {\n');
	newWind.document.write('    	opener.top.location.href = baseurl + newurl ;\n');
	newWind.document.write('  }');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_prev( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.selectedIndex>0) menuform.url.selectedIndex--;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_first( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = 0;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_last( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = menuform.url.options.length-1;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_next( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.options.length > (menuform.url.selectedIndex+1))\n');
	newWind.document.write('	menuform.url.selectedIndex++;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function restore()\n');
	newWind.document.write('{\n');
	newWind.document.write('    	focus();\n');
	newWind.document.write('	menu_goto(jump);\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('goto_first(jump)\n');
	newWind.document.write('//-->\n');
	newWind.document.write('<');
	newWind.document.write('/SCRIPT>\n');
}
function pop_navigate(){
var isOpen = false
try {
isOpen = (newWind != null) && (!newWind.closed)
} catch (e) {}
  if (!isOpen) {
    newWind =  window.open("" ,"HtmlDiffJumpWindow","width=270,height=40")
    if (newWind.opener == null) { // for Nav 2.0x
      newWind.opener = self // this creates and sets a new prop
    }	putJumpCode();
  
} 
else 
{	newWind.execScript("restore()", "JavaScript");
  }
}
function exit(){
var isOpen = false
try {
isOpen = (newWind != null) && (!newWind.closed)
} catch (e) {}
if (isOpen) {
	newWind.close();
  }
}
//--></SCRIPT><body onunload=exit()><form method="POST">  <p align="center"><i><font size="3">Difference Analysis Generated by   <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> on  5/12/2005 2:48 PM</font></i>&nbsp;&nbsp;
  <input type="button" value="Navigate Changes" name="Navigate" onclick=pop_navigate()></p></form></body><html>
<style type="text/css">
<!--
.HDNormal {  color: #000000;background:  #ffffff;text-decoration:none}
.HDDeleted {  color: #ff0000;background:  #ffffff;text-decoration:line-through}
.HDAdded {  color: #000000;background:  #ffff00;text-decoration:none}
-->
</style>
<body>
<pre>
 <span class="HDNormal">

&lt;?xml version="1.0" encoding="UTF-8"?&gt;  
&lt;Assert xmlns="http://www.ruleml.org/0.<a name="diff" id="c0"><span class="HDDeleted">88/</span></a><span class="HDAdded">89/</span>xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ruleml.org/0.<span class="HDDeleted">88/</span><span class="HDAdded">89/</span>xsd http://www.ruleml.org/0.<span class="HDDeleted">88/xsd/urequalog.xsd" &gt;  </span><span class="HDAdded">89/xsd/hornlogeq.xsd"&gt;   </span>
&lt;!-- a trivial example rulebase for testing the 'UR' Equalog RuleML sublanguage --&gt;  
&lt;And <a name="diff" id="c1"><span class="HDDeleted">innerclose="</span></a><span class="HDAdded">mapClosure="</span>universal"&gt; <span class="HDDeleted"> </span><span class="HDAdded">      </span>
&lt;Implies&gt;   
&lt;head&gt;      
&lt;Atom&gt;       
&lt;opr&gt;
&lt;Rel&gt;friend&lt;/Rel&gt;
&lt;/opr&gt;       
&lt;slot&gt;
&lt;Ind&gt;t&lt;/Ind&gt;
&lt;Var&gt;b&lt;/Var&gt;
&lt;/slot&gt;       
&lt;Var type="string"&gt;x&lt;/Var&gt;       
&lt;Var&gt;y&lt;/Var&gt;       
&lt;Ind wref="some_URI"&gt;Steph&lt;/Ind&gt;      
&lt;/Atom&gt;   
&lt;/head&gt;   
&lt;body&gt;     
&lt;And&gt;     
&lt;Atom&gt;       
&lt;opr&gt;
&lt;Rel&gt;friend&lt;/Rel&gt;
&lt;/opr&gt;       
&lt;Ind type="test" wref="some_URI"&gt;Jane&lt;/Ind&gt;       
&lt;Ind wref="another_URI"&gt;Joan&lt;/Ind&gt;       
&lt;Ind wref="another_URI" type="long"&gt;Jack&lt;/Ind&gt;       
&lt;Var&gt;y&lt;/Var&gt;       
&lt;Ind wref="another_URI"&gt;Frank&lt;/Ind&gt;       
&lt;slot&gt;
&lt;Ind&gt;yar&lt;/Ind&gt;
&lt;Cterm type="string"&gt;           
&lt;opc&gt;
&lt;Ctor wref="another_URI"&gt;constructor&lt;/Ctor&gt;
&lt;/opc&gt;           
&lt;Plex&gt;             
&lt;Var&gt;z&lt;/Var&gt;             
&lt;slot&gt;
&lt;Ind&gt;yar2&lt;/Ind&gt;
&lt;Var&gt;c&lt;/Var&gt;
&lt;/slot&gt;           
&lt;/Plex&gt;         
&lt;/Cterm&gt;
&lt;/slot&gt;     
&lt;/Atom&gt;     
&lt;/And&gt;   
&lt;/body&gt; 
&lt;/Implies&gt;        
&lt;Atom&gt;         
&lt;opr&gt;
&lt;Rel wref="some_URI"&gt;some relation&lt;/Rel&gt;
&lt;/opr&gt;         
&lt;slot&gt;
&lt;Ind&gt;role_name1&lt;/Ind&gt;
&lt;Ind&gt;role 1&lt;/Ind&gt;
&lt;/slot&gt;         
&lt;Ind&gt;constant a&lt;/Ind&gt;         
&lt;Ind wref="another_URI"&gt;constant b&lt;/Ind&gt;         
&lt;slot&gt;
&lt;Ind&gt;role_name2&lt;/Ind&gt;
&lt;Ind wref="another_URI"&gt;role 2&lt;/Ind&gt;
&lt;/slot&gt;       
&lt;/Atom&gt;        
&lt;Atom&gt;         
&lt;opr&gt;
&lt;Rel&gt;another relation&lt;/Rel&gt;
&lt;/opr&gt;         
&lt;Ind wref="another_URI"&gt;constant c&lt;/Ind&gt;         
&lt;Ind&gt;constant d&lt;/Ind&gt;         
&lt;Cterm&gt;           
&lt;opc&gt;
&lt;Ctor&gt;yac&lt;/Ctor&gt;
&lt;/opc&gt;             
&lt;Ind&gt;constant g&lt;/Ind&gt;             
&lt;Ind wref="another_URI"&gt;constant h&lt;/Ind&gt;             
&lt;Cterm&gt;               
&lt;opc&gt;
&lt;Ctor wref="empty_URI"&gt;empty&lt;/Ctor&gt;
&lt;/opc&gt;             
&lt;/Cterm&gt;             
&lt;Ind&gt;constant h&lt;/Ind&gt;         
&lt;/Cterm&gt;       
&lt;/Atom&gt;        
&lt;Equal&gt;         
&lt;Nano&gt;           
&lt;opf&gt;
&lt;Fun wref="fun_URI"&gt;some function&lt;/Fun&gt;
&lt;/opf&gt;           
&lt;Ind&gt;arg1&lt;/Ind&gt;           
&lt;Ind&gt;arg2&lt;/Ind&gt;           
&lt;Ind type="test2"&gt;arg3&lt;/Ind&gt;         
&lt;/Nano&gt;         
&lt;Nano&gt;           
&lt;opf&gt;
&lt;Fun wref="fun_URI"&gt;some other function&lt;/Fun&gt;
&lt;/opf&gt;           
&lt;Ind&gt;arg4&lt;/Ind&gt;           
&lt;Ind&gt;arg5&lt;/Ind&gt;           
&lt;Ind&gt;arg6&lt;/Ind&gt;         
&lt;/Nano&gt;       
&lt;/Equal&gt;        
&lt;Atom&gt;       
&lt;opr&gt;
&lt;Rel&gt;yet another relation&lt;/Rel&gt;
&lt;/opr&gt;       
&lt;Ind&gt;constant e&lt;/Ind&gt;       
&lt;Ind&gt;constant b&lt;/Ind&gt;       
&lt;slot&gt;
&lt;Ind&gt;role_name3&lt;/Ind&gt;
&lt;Ind&gt;role 3&lt;/Ind&gt;
&lt;/slot&gt;     
&lt;/Atom&gt;       
&lt;Equal&gt;       
&lt;Ind&gt;some constant&lt;/Ind&gt;       
&lt;Var type="test"&gt;d&lt;/Var&gt;     
&lt;/Equal&gt;  
&lt;/And&gt;  
&lt;/Assert&gt;</span>
</pre>
</body>
</html>
